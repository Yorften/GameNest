server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;

    #access_log  logs/host.access.log  main;
    # access_log /usr/local/var/log/nginx/gamenest_builds.access.log;
    # error_log /usr/local/var/log/nginx/gamenest_builds.error.log;

    # --- Serve React Frontend ---
    location / {
        # Root directory inside the container where frontend files were copied
        root /usr/share/nginx/html/frontend;
        index index.html;
        # Crucial for single-page applications (like React Router)
        try_files $uri $uri/ /index.html;

        # Add COOP/COEP headers here *only if* your React App itself
        # absolutely requires them (e.g., uses SharedArrayBuffer directly).
        # Usually, you only need them for the embedded game.
        # add_header Cross-Origin-Embedder-Policy "require-corp" always;
        # add_header Cross-Origin-Opener-Policy "same-origin" always;
    }

    # --- Location for /games/... routes ---
    # The ^~ modifier makes this prefix match take priority over regex locations
    location ^~ /games/ {

        root /usr/share/nginx/html/frontend;

        try_files $uri $uri/ /index.html;

        # *** Add headers ONLY for requests starting with /games/ ***
        add_header Cross-Origin-Embedder-Policy "require-corp" always;
        add_header Cross-Origin-Opener-Policy "same-origin" always;
    }

    location /builds/ {
        # 'alias' points to the directory CONTAINING your build folders (build-123, etc.)
        alias /Users/karizma/local_nginx_builds/;

        # Ensure directory listing is off (optional security)
        autoindex off;

        # *** Add the crucial COOP/COEP Headers ***
        # The 'always' flag ensures headers are added even on error responses
        add_header Cross-Origin-Opener-Policy "same-origin" always;
        add_header Cross-Origin-Embedder-Policy "require-corp" always;
        add_header Cross-Origin-Resource-Policy "cross-origin" always;
    }


    #error_page  404  /404.html;
    error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html; # Adjust path if needed
            internal;
        }

    # gzip compression for assets
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # Cache control for static assets (adjust paths/times as needed)
    location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|webp|svg|woff|woff2|ttf|eot)$ {
        root /usr/share/nginx/html/frontend; # Serve assets from frontend root
        expires 1y;
        add_header Cache-Control "public";
        access_log off; # Don't log access for static assets
    }



    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}